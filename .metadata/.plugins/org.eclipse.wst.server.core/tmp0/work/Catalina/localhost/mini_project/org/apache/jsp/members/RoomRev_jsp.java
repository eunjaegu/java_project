/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2024-05-01 06:52:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.members;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class RoomRev_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/java_project/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/mini_project/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1712542756981L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>객실예약</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css\" />\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("<!-- css 적용 -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/style/css/flaticon.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/style/css/style.css\">\r\n");
      out.write("<!-- 캘린더 import -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/jquery/latest/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/momentjs/latest/moment.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css\" />\r\n");
      out.write("<script>\r\n");
      out.write("	const servletUrl = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/RevInsert\";\r\n");
      out.write("	const headCount = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${roomVO.headCount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("	const revList = JSON.parse('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${revList}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("');\r\n");
      out.write("	\r\n");
      out.write("</script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/util/RoomRevCalendar.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/util/CountHead.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("	form {\r\n");
      out.write("		display: flex;\r\n");
      out.write("		justify-content: space-between;\r\n");
      out.write("		width: 100%;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#container {\r\n");
      out.write("		width: 100%;\r\n");
      out.write("		padding-right: 15px;\r\n");
      out.write("		padding-left: 15px;\r\n");
      out.write("		margin-right: auto;\r\n");
      out.write("		margin-left: auto;\r\n");
      out.write("		max-width: 1100px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#rightDiv {\r\n");
      out.write("        background-color: #fff;\r\n");
      out.write("        border-radius: 10px;\r\n");
      out.write("        box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\r\n");
      out.write("        margin: 0 10px;\r\n");
      out.write("        padding: 20px;\r\n");
      out.write("        align-items: flex-start; \r\n");
      out.write("        width: 30%;\r\n");
      out.write("    }\r\n");
      out.write("	#leftDiv {\r\n");
      out.write("		display: flex;\r\n");
      out.write("		flex-direction: column; /* 내부 요소를 세로로 정렬합니다. */\r\n");
      out.write("		flex: 0 0 calc(70% - 10px); /* 부모 컨테이너 너비의 60%에서 10px를 뺀 값으로 설정합니다. */\r\n");
      out.write("		padding: 10px;\r\n");
      out.write("		margin-right: 10px;\r\n");
      out.write("		width: 70%;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.leftTable {\r\n");
      out.write("		width: 100%;\r\n");
      out.write("		margin-top: 0 auto;\r\n");
      out.write("		float: left;\r\n");
      out.write("	\r\n");
      out.write("	}\r\n");
      out.write("	.leftTable td {\r\n");
      out.write(" 	    font-weight: bold; /* 글씨를 진하게 */ \r\n");
      out.write(" 	    font-size: 15pt; /* 글씨 크기를 상대적으로 20% 증가 */ \r\n");
      out.write(" 	    color: #333; /* 글씨 색상을 진한 회색으로 */ \r\n");
      out.write("	}\r\n");
      out.write("	.leftimg{\r\n");
      out.write("		float: left;\r\n");
      out.write("		width: auto;\r\n");
      out.write("		display: block;\r\n");
      out.write("   		margin-left: auto;\r\n");
      out.write("    	margin-right: right;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("/* 	.rightTable { */\r\n");
      out.write("/* 	font-weight: bold; */\r\n");
      out.write("/* 		width: 200px; */\r\n");
      out.write("/* 		border-collapse: separate; */\r\n");
      out.write("/* 		border-spacing: 10px; */\r\n");
      out.write("/* 		padding: 10px; */\r\n");
      out.write("/* 		float: left; */\r\n");
      out.write("/* 	} */\r\n");
      out.write("	\r\n");
      out.write("	#price-range-slider {\r\n");
      out.write("		width: 140px;\r\n");
      out.write("		margin-left: 5px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.filter {\r\n");
      out.write("		width: 150px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.filter_select {\r\n");
      out.write("		width: 155px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.headCount {\r\n");
      out.write("		width: 60px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#headTd {\r\n");
      out.write("		display: flex; /* 요소들을 가로로 나열 */\r\n");
      out.write("		align-items: center; /* 요소들을 세로 중앙 정렬 */\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#headTd button {\r\n");
      out.write("		margin: 0 5px 0 5px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#headCount {\r\n");
      out.write("		width: 50px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#price {\r\n");
      out.write("		width: 150px;\r\n");
      out.write("		border: none;\r\n");
      out.write("		outline: none;\r\n");
      out.write("		text-align: right;\r\n");
      out.write("		font-size: 15pt;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("/* 	img { */\r\n");
      out.write("/* 		width: 300px; */\r\n");
      out.write("/* 		height: auto; /* 이미지의 가로 세로 비율을 유지하면서 가로 너비를 300px로 지정 */ */\r\n");
      out.write("/* 	} */\r\n");
      out.write("	.sliderouter{\r\n");
      out.write("		margin: 20px auto;\r\n");
      out.write("		width: 700px;\r\n");
      out.write("		height: 500px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.slider {\r\n");
      out.write("		width: 700px; /* 슬라이드의 너비 */\r\n");
      out.write("		overflow: hidden; /* 넘치는 이미지 숨김 */\r\n");
      out.write("		position: relative; /* 상대 위치 지정 */\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.slider ul {\r\n");
      out.write("		list-style-type: none; /* 리스트 스타일 제거 */\r\n");
      out.write("		margin: 0; /* 마진 제거 */\r\n");
      out.write("		padding: 0; /* 패딩 제거 */\r\n");
      out.write("		display: flex;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.slider ul li {\r\n");
      out.write("		\r\n");
      out.write("/* 		float: left; /* 왼쪽으로 정렬 */ */\r\n");
      out.write("		width: 100%; /* 이미지 너비 */\r\n");
      out.write("	}\r\n");
      out.write("	/* 이전/다음 버튼 스타일 */\r\n");
      out.write("	.prev, .next {\r\n");
      out.write("		cursor: pointer; /* 커서 모양 변경 */\r\n");
      out.write("		position: absolute; /* 절대 위치 지정 */\r\n");
      out.write("		top: 50%; /* 상단 여백 */\r\n");
      out.write("		transform: translateY(-50%); /* 수직 정렬 */\r\n");
      out.write("		transition: width 0.5s ease;\r\n");
      out.write("		background-color: rgba(0, 0, 0, 0.5); /* 배경색 */\r\n");
      out.write("		color: white; /* 글자색 */\r\n");
      out.write("		padding: 10px; /* 안쪽 여백 */\r\n");
      out.write("		z-index: 1; /* 위에 표시 */\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.prev {\r\n");
      out.write("		left: 0; /* 왼쪽에 배치 */\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.next {\r\n");
      out.write("		right: 0; /* 오른쪽에 배치 */\r\n");
      out.write("	}\r\n");
      out.write("	.visual_img {\r\n");
      out.write("		 display: flex;\r\n");
      out.write("/* 		  width: 4000px; /* 모든 이미지 너비의 합, 동적으로 계산 필요 */ */\r\n");
      out.write("	        margin: 0;\r\n");
      out.write("	        padding: 0;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.image-container {\r\n");
      out.write("/* 		width: 600px; /* 이미지 컨테이너의 너비를 설정합니다. */ */\r\n");
      out.write("/* 		height: 400px; /* 이미지 컨테이너의 높이를 설정합니다. */ */\r\n");
      out.write("		overflow: hidden; /* 이미지가 넘치는 경우를 처리합니다. */\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.image-container img {\r\n");
      out.write("		width: 100%; /* 이미지의 너비를 부모 요소에 맞게 설정합니다. */\r\n");
      out.write("		height: auto; /* 이미지의 높이를 자동으로 조절하여 비율을 유지합니다. */\r\n");
      out.write("		display: block; /* 이미지를 블록 요소로 표시합니다. */\r\n");
      out.write("	}\r\n");
      out.write("	td {\r\n");
      out.write("	    padding-top: 15px; /* 위쪽 패딩 */\r\n");
      out.write("	    padding-bottom: 15px; /* 아래쪽 패딩 */\r\n");
      out.write("	}\r\n");
      out.write("	/* 테이블 기본 설정 */\r\n");
      out.write("	.rightTable {\r\n");
      out.write("	    width: 100%; /* 테이블의 너비를 전체로 설정 */\r\n");
      out.write("	    border-collapse: collapse; /* 셀 사이 공간 없애기 */\r\n");
      out.write("	    \r\n");
      out.write("	    border-radius: 10px; /* 모서리 둥글게 */\r\n");
      out.write("	    overflow: hidden; /* 둥근 모서리에 컨텐츠가 넘치는 것을 숨김 */\r\n");
      out.write("	    margin: 20px 0; /* 상하 여백 설정 */\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* 테이블 헤더 및 셀 스타일 */\r\n");
      out.write("	.rightTable td {\r\n");
      out.write("	    padding: 15px; /* 셀 내부 패딩 */\r\n");
      out.write("	    text-align: left; /* 텍스트 왼쪽 정렬 */\r\n");
      out.write("	    border-bottom: 1px solid #E6E6FA; /* 셀 하단 테두리, 연한 라벤더색 사용 */\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* 마지막 셀의 테두리 제거 */\r\n");
      out.write("	.rightTable tr:last-child td {\r\n");
      out.write("	    border-bottom: none;\r\n");
      out.write("	}\r\n");
      out.write("	.btn_css {\r\n");
      out.write("-webkit-border-radius: 13px;\r\n");
      out.write("-moz-border-radius: 13px;\r\n");
      out.write("border-radius: 13px;\r\n");
      out.write("\r\n");
      out.write("border : 0px;\r\n");
      out.write("color: #FFFFFF;\r\n");
      out.write("font-family: Arial;\r\n");
      out.write("font-size: 15px;\r\n");
      out.write("font-weight: 100;\r\n");
      out.write("padding: 10px;\r\n");
      out.write("background-color: #8D703B;\r\n");
      out.write("text-decoration: none;\r\n");
      out.write("display: inline-block;\r\n");
      out.write("cursor: pointer;\r\n");
      out.write("text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn_css:hover {\r\n");
      out.write("background-color: #73685d;\r\n");
      out.write("}\r\n");
      out.write("#downCount, #upCount {\r\n");
      out.write("    width: 30px; /* 버튼의 너비 */\r\n");
      out.write("    height: 30px; /* 버튼의 높이 */\r\n");
      out.write("    font-size: 20px; /* 버튼 내 텍스트 크기 */\r\n");
      out.write("    text-align: center; /* 텍스트 중앙 정렬 */\r\n");
      out.write("    vertical-align: middle; /* 세로 방향 중앙 정렬 */\r\n");
      out.write("    line-height: 30px; /* 버튼 내 줄 높이를 버튼의 높이와 일치시킴 */\r\n");
      out.write("    margin: 0; /* 마진 제거 */\r\n");
      out.write("    padding: 0; /* 패딩 제거 */\r\n");
      out.write("    border: 1px solid #ccc; /* 테두리 스타일 */\r\n");
      out.write(" \r\n");
      out.write("}\r\n");
      out.write("	/* 버튼 스타일 */\r\n");
      out.write("	button {	 \r\n");
      out.write("	    background-color: #decfa6; /* 연한 복숭아색 */\r\n");
      out.write("	    color: #fff;	\r\n");
      out.write("	    border-radius: 5px;\r\n");
      out.write("	    cursor: pointer;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	button:hover {\r\n");
      out.write("	    background-color: #FFB6C1; /* 더 밝은 살색으로 호버 효과 */\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* 입력 필드 스타일 */\r\n");
      out.write("	input[type=\"text\"] {\r\n");
      out.write("	    padding: 8px;\r\n");
      out.write("	    border: 1px solid #FFDAB9; /* 테두리 색상 */\r\n");
      out.write("	    border-radius: 5px;\r\n");
      out.write("	    width: 80%; /* 입력 필드 너비 */\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.daterangepicker .drp-calendar .calendar-table .table-condensed tbody tr .disabled {\r\n");
      out.write("	    background-color: #f2f2f2; /* 선택 불가능한 날짜의 배경색 */\r\n");
      out.write("	    color: #ccc; /* 선택 불가능한 날짜의 텍스트 색상 */\r\n");
      out.write("	}\r\n");
      out.write("	hr {\r\n");
      out.write("        border: none;\r\n");
      out.write("        border-top: 1px solid #ccc;\r\n");
      out.write("      \r\n");
      out.write("          width: 50%; /* 수정된 부분: 수평선의 길이를 50%로 설정 */\r\n");
      out.write("    margin: 10px auto;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("<script>\r\n");
      out.write("	const roomNo = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${roomVO.roomNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("\r\n");
      out.write("    $(function() {\r\n");
      out.write("    	// 슬라이드 스크립트\r\n");
      out.write("        $(\".visual_img li:last\").prependTo(\r\n");
      out.write("            \".visual_img\");\r\n");
      out.write("\r\n");
      out.write("        $(\".next\").click(function() {\r\n");
      out.write("            $(\".visual_img\").animate({\r\n");
      out.write("                marginLeft : \"-700px\"\r\n");
      out.write("            },\r\n");
      out.write("            function() {\r\n");
      out.write("                $(\".visual_img li:first\").appendTo(\".visual_img\");\r\n");
      out.write("                $(\".visual_img\").css({\r\n");
      out.write("                    marginLeft : 0\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        $(\".prev\").click(function() {\r\n");
      out.write("            $(\".visual_img\").animate({\r\n");
      out.write("                marginLeft : \"+1400px\"\r\n");
      out.write("            },\r\n");
      out.write("            function() {\r\n");
      out.write("                $(\".visual_img li:last\").prependTo(\".visual_img\");\r\n");
      out.write("                $(\".visual_img\").css({\r\n");
      out.write("                    marginLeft : 0\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("        // 슬라이드 스크립트 끝\r\n");
      out.write("        \r\n");
      out.write("    });\r\n");
      out.write("	    \r\n");
      out.write("    function fn_process(){\r\n");
      out.write("	    /*서버에서 반환한 결과를 받음*/\r\n");
      out.write("	    $.ajax({\r\n");
      out.write("	       type:\"get\",\r\n");
      out.write("	       async:true,  \r\n");
      out.write("	       url:\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\",\r\n");
      out.write("	       dataType:\"text\",\r\n");
      out.write("	       data: {roomNo:roomNo},\r\n");
      out.write("	       success:function (data,textStatus) {\r\n");
      out.write("	          if(data=='usable') {\r\n");
      out.write("	        	  swal.fire('예약할 수 있는 객실입니다.');\r\n");
      out.write("	        	  checkId = true;\r\n");
      out.write("	          }else {\r\n");
      out.write("	        	  swal.fire('예약할 수 없는 객실입니다.');\r\n");
      out.write("	        	  checkId = false;\r\n");
      out.write("		       	  $('#submit').prop(\"disabled\", true);\r\n");
      out.write("	          }\r\n");
      out.write("	       },\r\n");
      out.write("	       error:function(data,textStatus){\r\n");
      out.write("	          alert(\"잘못 입력했습니다.\");\r\n");
      out.write("	       },\r\n");
      out.write("	       complete:function(data,textStatus){\r\n");
      out.write("	    	   \r\n");
      out.write("	       }\r\n");
      out.write("	    });  // ajax() END	 \r\n");
      out.write("	    \r\n");
      out.write("	 }	// fn_process() END\r\n");
      out.write("	 window.onload = function() {\r\n");
      out.write("		    var slider = document.querySelector('.visual_img');\r\n");
      out.write("		    var liCount = slider.querySelectorAll('li').length; // li 요소의 개수를 가져옵니다.\r\n");
      out.write("		    var sliderWidth = 700 * liCount; // 슬라이더의 너비를 계산합니다.\r\n");
      out.write("		    slider.style.width = sliderWidth + 'px'; // 슬라이더의 너비를 설정합니다.\r\n");
      out.write("	};\r\n");
      out.write("    \r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	<div id=\"container\">\r\n");
      out.write("		<!-- 메인 컨테이너 -->\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/include/Header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<div class=\"row justify-content-center\" style=\"margin-bottom: 50px;\">\r\n");
      out.write("			<form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/RevPayment\" method=\"post\">\r\n");
      out.write("				<input type=\"hidden\" name=\"roomNo\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${roomVO.roomNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("\r\n");
      out.write("				<div id=\"leftDiv\">\r\n");
      out.write("					<!-- 왼쪽 컨테이너 -->\r\n");
      out.write("					\r\n");
      out.write("						<div class=\"sliderouter\">\r\n");
      out.write("							<div class=\"slider\">\r\n");
      out.write("								<div class=\"prev\">&lt;</div>\r\n");
      out.write("								<ul class=\"visual_img\">\r\n");
      out.write("									<!-- 이미지 리스트 -->\r\n");
      out.write("								 ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("								</ul>\r\n");
      out.write("								<div class=\"next\">&gt;</div>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<!-- 이전/다음 버튼 -->\r\n");
      out.write("						<table class=\"leftTable\" style=\"text-align: center;\">\r\n");
      out.write("						<colgroup>\r\n");
      out.write("							<col width=\"30%\" >\r\n");
      out.write("							<col width=\"70%\" >\r\n");
      out.write("						</colgroup>\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td>\r\n");
      out.write("							<span style=\"font-size: 18pt\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${roomVO.roomName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span><hr>\r\n");
      out.write("							<span style=\"font-size: 10pt; \">KRW  </span>\r\n");
      out.write("							<span >");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${roomVO.roomCost }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("~</span><hr>\r\n");
      out.write("							</td>\r\n");
      out.write("							<td rowspan=\"\"> <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/data/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${imgVO.infoImg}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" alt=\"image\" style=\"width:100%;\">\r\n");
      out.write("						</tr>\r\n");
      out.write("						\r\n");
      out.write("						\r\n");
      out.write("					</table>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<div id=\"rightDiv\">\r\n");
      out.write("    <!-- 오른쪽 컨테이너 -->\r\n");
      out.write("    <table class=\"rightTable\">\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td>\r\n");
      out.write("                <strong>객실</strong><br>\r\n");
      out.write("                <input type=\"text\" name=\"roomName\" id=\"roomName\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${roomVO.roomName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly>\r\n");
      out.write("            </td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td>\r\n");
      out.write("                <strong>예약 가능한 날짜</strong><br>\r\n");
      out.write("                <input type=\"text\" name=\"checkDate\" id=\"roomRevDate\" value=\"\" required readonly>\r\n");
      out.write("            </td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td>\r\n");
      out.write("                <strong>인원수</strong><br>\r\n");
      out.write("                <button type=\"button\" id=\"downCount\" onclick=\"downValueRoomRev()\">-</button>\r\n");
      out.write("                <input type=\"text\" name=\"headCount\" id=\"headCount\" value=\"1\" readonly required>\r\n");
      out.write("                <button type=\"button\" id=\"upCount\" onclick=\"upValueRoomRev()\">+</button>\r\n");
      out.write("            </td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td>\r\n");
      out.write("                <strong>총 가격</strong><br>\r\n");
      out.write("                <input type=\"text\" name=\"price\" id=\"price\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${roomVO.roomCost }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly>\r\n");
      out.write("            </td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td align=\"center\">\r\n");
      out.write("                <input class=\"btn_css\" type=\"submit\" value=\"예약하기\">\r\n");
      out.write("            </td>\r\n");
      out.write("        </tr>\r\n");
      out.write("    </table>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("			</form>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/include/Footer.jsp", out, false);
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /members/RoomRev.jsp(4,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("contextPath");
      // /members/RoomRev.jsp(4,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/members/RoomRev.jsp(4,0) '${pageContext.request.contextPath }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /members/RoomRev.jsp(324,13) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue("/RevPayment");
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /members/RoomRev.jsp(374,9) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty imgVO}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("							            ");
          if (_jspx_meth_c_005fif_005f1(_jspx_th_c_005fif_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("							            ");
          if (_jspx_meth_c_005fif_005f2(_jspx_th_c_005fif_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("							            ");
          if (_jspx_meth_c_005fif_005f3(_jspx_th_c_005fif_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("							            ");
          if (_jspx_meth_c_005fif_005f4(_jspx_th_c_005fif_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("							            ");
          if (_jspx_meth_c_005fif_005f5(_jspx_th_c_005fif_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("							    ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      // /members/RoomRev.jsp(375,19) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty imgVO.img1}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("							                <li class=\"image-container\"><img src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/data/");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${imgVO.img1}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" alt=\"Image 1\" /></li>\r\n");
          out.write("							            ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      // /members/RoomRev.jsp(378,19) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty imgVO.img2}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("							                <li class=\"image-container\"><img src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/data/");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${imgVO.img2}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" alt=\"Image 2\" /></li>\r\n");
          out.write("							            ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f3_reused = false;
    try {
      _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      // /members/RoomRev.jsp(381,19) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty imgVO.img3}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
      if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("							                <li class=\"image-container\"><img src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/data/");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${imgVO.img3}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" alt=\"Image 3\" /></li>\r\n");
          out.write("							            ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
      _jspx_th_c_005fif_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f4 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f4_reused = false;
    try {
      _jspx_th_c_005fif_005f4.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      // /members/RoomRev.jsp(384,19) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f4.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty imgVO.img4}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f4 = _jspx_th_c_005fif_005f4.doStartTag();
      if (_jspx_eval_c_005fif_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("							                <li class=\"image-container\"><img src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/data/");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${imgVO.img4}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" alt=\"Image 4\" /></li>\r\n");
          out.write("							            ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f4.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f4);
      _jspx_th_c_005fif_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f4, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f5(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f5 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f5_reused = false;
    try {
      _jspx_th_c_005fif_005f5.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      // /members/RoomRev.jsp(387,19) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f5.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty imgVO.img5}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f5 = _jspx_th_c_005fif_005f5.doStartTag();
      if (_jspx_eval_c_005fif_005f5 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("							                <li class=\"image-container\"><img src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/data/");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${imgVO.img5}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" alt=\"Image 5\" /></li>\r\n");
          out.write("							            ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f5.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f5);
      _jspx_th_c_005fif_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f5, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f5_reused);
    }
    return false;
  }
}
