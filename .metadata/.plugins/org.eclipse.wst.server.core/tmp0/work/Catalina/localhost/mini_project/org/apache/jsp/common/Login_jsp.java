/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2024-05-01 06:51:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/java_project/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/mini_project/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1712542756981L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<title>로그인</title>\r\n");
      out.write("	<script src=\"http://cdn.jsdelivr.net/npm/sweetalert2@11\"></script>\r\n");
      out.write("	<script src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("<!-- css 적용 -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/style/css/flaticon.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/style/css/style.css\">\r\n");
      out.write("	<script>\r\n");
      out.write("		/** 로그인 확인 **/\r\n");
      out.write("		$(function() {\r\n");
      out.write("			// 로그인 데이터 전송\r\n");
      out.write("			 $(\"#login\").submit(function(event){\r\n");
      out.write("	                event.preventDefault(); // 기본 이벤트 제거\r\n");
      out.write("	                var formData = $(this).serialize(); // 폼 데이터 가져오기\r\n");
      out.write("	                $.ajax({\r\n");
      out.write("	                    url: \"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\",\r\n");
      out.write("	                    type: \"post\",\r\n");
      out.write("	                    data: formData,\r\n");
      out.write("	                    dataType: \"text\",\r\n");
      out.write("	                    success: function(data){\r\n");
      out.write("	                    	if(data == \"adminLogin\" || data ==\"memberLogin\")\r\n");
      out.write("	                    		window.location.replace(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/LoginCheck\");\r\n");
      out.write("	                    	else if(data ==\"already\"){\r\n");
      out.write("	                    		Swal.fire(\"이미 로그인 중입니다.\");\r\n");
      out.write("	                    		window.location.replace(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/LoginCheck\");\r\n");
      out.write("	                    	} else {\r\n");
      out.write("	                    		Swal.fire(\"아이디 또는 비밀번호가 일치하지 않습니다.\");\r\n");
      out.write("	                    	}\r\n");
      out.write("	                    },\r\n");
      out.write("	                    error: function(xhr, status, error){\r\n");
      out.write("	                        console.log(\"Error: \" + error);\r\n");
      out.write("	                    }\r\n");
      out.write("	                });\r\n");
      out.write("	            });\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		/* 로그인 작성란 글자수 제한 */\r\n");
      out.write("    function chkword(obj, maxByte) {\r\n");
      out.write("        var strValue = obj.value;\r\n");
      out.write("        var strLen = strValue.length;\r\n");
      out.write("        var totalByte = 0;\r\n");
      out.write("        var len = 0;\r\n");
      out.write("        var oneChar = \"\";\r\n");
      out.write("        var str2 = \"\";\r\n");
      out.write("\r\n");
      out.write("        for (var i = 0; i < strLen; i++) {\r\n");
      out.write("            oneChar = strValue.charAt(i);\r\n");
      out.write("            if (escape(oneChar).length > 4) {\r\n");
      out.write("                totalByte += 2; // 한글일 경우 2바이트 추가\r\n");
      out.write("            } else {\r\n");
      out.write("                totalByte++; // 영어 및 숫자는 1바이트 추가\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // 각 글자에 대한 바이트 수를 확인하여 한글은 6글자, 영어와 숫자는 20글자로 제한\r\n");
      out.write("            if (oneChar.match(/[가-힣]/)) { // 한글인 경우\r\n");
      out.write("                if (totalByte <= 12) { // 6글자 이내인 경우\r\n");
      out.write("                    len = i + 1;\r\n");
      out.write("                }\r\n");
      out.write("            } else { // 영어나 숫자인 경우\r\n");
      out.write("                if (totalByte <= maxByte) { // 20글자 이내인 경우\r\n");
      out.write("                    len = i + 1;\r\n");
      out.write("                }\r\n");
      out.write("            }	\r\n");
      out.write("       	}\r\n");
      out.write("\r\n");
      out.write("        // 제한된 글자 수를 초과하는 경우 잘라내고 경고 메시지 표시\r\n");
      out.write("        if (totalByte > maxByte) {\r\n");
      out.write("            alert(\"입력 가능한 글자 수를 초과하였습니다.\");\r\n");
      out.write("            str2 = strValue.substr(0, len);\r\n");
      out.write("            obj.value = str2;\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("html,body {\r\n");
      out.write("  font-family: \"Fira Sans\", Helvetica, Arial, sans-serif;\r\n");
      out.write("  -webkit-font-smoothing: antialiased;\r\n");
      out.write("  -moz-osx-font-smoothing: grayscale;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".container {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	padding-right: 15px;\r\n");
      out.write("	padding-left: 15px;\r\n");
      out.write("	margin-right: auto;\r\n");
      out.write("	margin-left: auto;\r\n");
      out.write("	max-width: 1100px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-structor {\r\n");
      out.write("  background-color: #222;\r\n");
      out.write("  border-radius: 15px;\r\n");
      out.write("  height: 550px;\r\n");
      out.write("  width: 350px;\r\n");
      out.write("  position: relative;\r\n");
      out.write("  overflow: hidden;\r\n");
      out.write("  margin-top: 100px;\r\n");
      out.write("  \r\n");
      out.write("  &::after {\r\n");
      out.write("    content: '';\r\n");
      out.write("    opacity: .8;\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    top: 0;right:0;bottom:0;left:0;\r\n");
      out.write("    background-repeat: no-repeat;\r\n");
      out.write("    background-position: center;\r\n");
      out.write("    background-size: cover;\r\n");
      out.write("    background-image: url('https://www.inspirekorea.com/sites/default/files/2023-10/content-pixie-VIh-B-bNZMc-unsplash%201.jpg');\r\n");
      out.write("  }\r\n");
      out.write("  \r\n");
      out.write("  .login {\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    top: 50%;\r\n");
      out.write("    left: 50%;\r\n");
      out.write("    -webkit-transform: translate(-50%, -50%);\r\n");
      out.write("    width: 65%;\r\n");
      out.write("    z-index: 5;\r\n");
      out.write("    -webkit-transition: all .3s ease;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .form-title {\r\n");
      out.write("      color: #fff;\r\n");
      out.write("      font-size: 1.7em;\r\n");
      out.write("      text-align: center;\r\n");
      out.write("      }\r\n");
      out.write("      span {\r\n");
      out.write("        color: rgba(0,0,0,0.4);\r\n");
      out.write("        opacity: 0;\r\n");
      out.write("        visibility: hidden;\r\n");
      out.write("        -webkit-transition: all .3s ease;\r\n");
      out.write("      }\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    .form-holder {\r\n");
      out.write("      border-radius: 15px;\r\n");
      out.write("      background-color: #fff;\r\n");
      out.write("      overflow: hidden;\r\n");
      out.write("      margin-top: 50px;\r\n");
      out.write("      opacity: 1;\r\n");
      out.write("      visibility: visible;\r\n");
      out.write("      -webkit-transition: all .3s ease;\r\n");
      out.write("      }\r\n");
      out.write("      .input {\r\n");
      out.write("        border: 0;\r\n");
      out.write("        outline: none;\r\n");
      out.write("        box-shadow: none;\r\n");
      out.write("        display: block;\r\n");
      out.write("        height: 30px;\r\n");
      out.write("        line-height: 30px;\r\n");
      out.write("        padding: 8px 15px;\r\n");
      out.write("        border-bottom: 1px solid #eee;\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        font-size: 12px;\r\n");
      out.write("        }\r\n");
      out.write("        &:last-child {\r\n");
      out.write("          border-bottom: 0;\r\n");
      out.write("        }\r\n");
      out.write("        &::-webkit-input-placeholder {\r\n");
      out.write("          color: rgba(0,0,0,0.4);\r\n");
      out.write("        }\r\n");
      out.write("      \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    .submit-btn {\r\n");
      out.write("      background-color: rgba(0,0,0,0.4);\r\n");
      out.write("      color: rgba(256,256,256,0.7);\r\n");
      out.write("      border:0;\r\n");
      out.write("      border-radius: 15px;\r\n");
      out.write("      display: block;\r\n");
      out.write("      margin: 15px auto; \r\n");
      out.write("      padding: 15px 45px;\r\n");
      out.write("      width: 100%;\r\n");
      out.write("      font-size: 13px;\r\n");
      out.write("      font-weight: bold;\r\n");
      out.write("      cursor: pointer;\r\n");
      out.write("      opacity: 1;\r\n");
      out.write("      visibility: visible;\r\n");
      out.write("      -webkit-transition: all .3s ease;\r\n");
      out.write("      \r\n");
      out.write("      &:hover {\r\n");
      out.write("        transition: all .3s ease;\r\n");
      out.write("        background-color: rgba(0,0,0,0.8);\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("   \r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	<div id=\"container\"> <!-- 메인 컨테이너 -->\r\n");
      out.write("	    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/include/Header.jsp", out, false);
      out.write("\r\n");
      out.write("		<div class=\"row justify-content-center\">\r\n");
      out.write("	<form id=\"login\">\r\n");
      out.write("	<div class=\"form-structor\">\r\n");
      out.write("	  <div class=\"login\">\r\n");
      out.write("	    <h2 class=\"form-title\" id=\"login\">로그인</h2>\r\n");
      out.write("	    <div class=\"form-holder\">\r\n");
      out.write("	      <input type=\"text\" class=\"input\" placeholder=\"Id\" name=\"id\" onkeyup=\"chkword(this, 20)\" required/>\r\n");
      out.write("	      <input type=\"password\" class=\"input\" placeholder=\"Password\" name=\"pw\" onkeyup=\"chkword(this, 20)\" required/>\r\n");
      out.write("	    </div>\r\n");
      out.write("	    <input type=\"submit\" value=\"로그인\" class=\"submit-btn\">\r\n");
      out.write("	  </div>\r\n");
      out.write("	</div>\r\n");
      out.write("	</form>\r\n");
      out.write("	</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /common/Login.jsp(6,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("contextPath");
      // /common/Login.jsp(6,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/common/Login.jsp(6,0) '${ pageContext.request.contextPath }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${ pageContext.request.contextPath }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /common/Login.jsp(26,27) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue("/Login");
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }
}
